name: pr merge

on:
  pull_request:
    types: [closed]
    branches:
      - dev
env:
  REGISTRY_NAME: apistoneteam1
  CLUSTER_NAME: apistoneteam1
  CLUSTER_RESOURCE_GROUP: APISTONE


jobs:
  test-transition-issue:
    name: Transition merge
    runs-on: ubuntu-latest
    steps:
    - name: Login
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASEURL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}

    - name: Transition merged
      uses: atlassian/gajira-transition@master
      if: github.event.pull_request.merged == true
      with:
        issue: ${{ github.head_ref }}
        transition: "In Code Review"
        
    - name: Checking out
      uses: actions/checkout@master
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}
        
    - name: Login
      uses: atlassian/gajira-login@master
      env:
        JIRA_BASE_URL: ${{ secrets.JIRA_BASEURL }}
        JIRA_USER_EMAIL: ${{ secrets.JIRA_USER }}
        JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}
        
    - name: Transition to qa
      uses: atlassian/gajira-transition@master
      with:
        issue: ${{ github.head_ref }}
        transition: "Ready For QA Deployment"
    
  Kubernetes_deployment:
    needs: test-transition-issue
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout source code 
      uses: actions/checkout@v3
    - name: ACR build
      id: build-push-acr
      uses: azure/acr-build@v1
      with:
        service_principal: ${{ secrets.service_principal }}
        service_principal_password: ${{ secrets.service_principal_password }}
        tenant: ${{ secrets.tenant }}
        registry: ${{ secrets.registry }}
        repository: ${{ secrets.repository }}
        image:  team1project
        folder: app/src
        dockerfile: ../../Dockerfile
        branch: dev
        tag: latest
    - name: Azure login
      id: login
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ secrets.resource_group }}' 
        cluster-name: '${{ secrets.cluster_name }}'
    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3
    - name: Deploy to AKS
      id: deploy-aks
      uses: Azure/k8s-deploy@v4
      with:
        namespace: 'dev'
        manifests: k8s/deployment.yml
        images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/team1project:latest'
        pull: false 
